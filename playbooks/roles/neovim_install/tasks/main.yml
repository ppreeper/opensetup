---
- name: Git curl
  ansible.builtin.apt:
    name:
      - git
      - curl
    state: present
  when: ansible_os_family == 'Debian'
- name: Vim purge
  ansible.builtin.apt:
    name:
      - vim
      - neovim
    state: absent
  when: ansible_os_family == 'Debian'
# neovim config files
- name: Add nvim dirs
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: "0755"
  with_items:
    - { path: "{{ config }}/nvim" }
    - { path: "{{ config }}/nvim/lua" }
    - { path: "{{ config }}/nvim/snippets" }
- name: Nvim config
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
    owner: "{{ user }}"
    group: "{{ user }}"
  with_items:
    - { src: "nvim/init.lua", dest: "{{ config }}/nvim/init.lua", mode: "0644" }
    - { src: "nvim/lua/plugins.lua", dest: "{{ config }}/nvim/lua/plugins.lua", mode: "0644" }
    - { src: "nvim/lua/_autoformat.lua", dest: "{{ config }}/nvim/lua/_autoformat.lua", mode: "0644" }
    - { src: "nvim/lua/_complete.lua", dest: "{{ config }}/nvim/lua/_complete.lua", mode: "0644" }
    - { src: "nvim/lua/_keycommands.lua", dest: "{{ config }}/nvim/lua/_keycommands.lua", mode: "0644" }
    - { src: "nvim/lua/_lspconfig.lua", dest: "{{ config }}/nvim/lua/_lspconfig.lua", mode: "0644" }
    - { src: "nvim/lua/_settings.lua", dest: "{{ config }}/nvim/lua/_settings.lua", mode: "0644" }
    - { src: "nvim/lua/_statusline.lua", dest: "{{ config }}/nvim/lua/_statusline.lua", mode: "0644" }
    - { src: "nvim/lua/_treesitter.lua", dest: "{{ config }}/nvim/lua/_treesitter.lua", mode: "0644" }
    - { src: "nvim/lua/_utils.lua", dest: "{{ config }}/nvim/lua/_utils.lua", mode: "0644" }
# install nvim
- name: Nvimup
  ansible.builtin.template:
    src: "bin/nvimup"
    dest: "{{ home }}/bin/nvimup"
    mode: "0750"
    owner: "{{ user }}"
    group: "{{ user }}"
- name: Install nvim
  ansible.builtin.command: "{{ home }}/bin/nvimup"
  become_user: "{{ user }}"
